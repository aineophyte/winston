// Code generated by protoc-gen-typescript. DO NOT EDIT.

export enum TurnStatus {
    VALID = "VALID",
    INVALID = "INVALID",
    SLOT_OCCUPIED = "SLOT_OCCUPIED",
    OUT_OF_TURN = "OUT_OF_TURN",
    WINNER = "WINNER",
    DRAW = "DRAW",
}
// The game board is an N x M array of emtpy slots
// or game pieces.  Normal size is 7 x 6
export interface GameBoard {
    slots?: Array<GameSlot>;
}

// Information about a player
export interface PlayerInfo {
    name?: string;
    mode?: string;
}

// The game info contains the game id and ...
export interface GameInfo {
    game_id?: string;
    player1?: PlayerInfo;
    player2?: PlayerInfo;
}

export interface GameSlot {
    x_coord?: number;
    y_coord?: number;
    piece?: GamePiece;
}

export interface GamePiece {
    player2?: boolean;
    move_number?: number;
}

export interface TurnInfo {
    game_id?: string;
    x_coord?: number;
    player2?: boolean;
}

export interface TurnResult {
    status?: TurnStatus;
    move_number?: number;
}

export interface DeleteResult {
    game_id?: string;
}

export interface ConnectFourService {
    StartGame: (r:GameInfo) => { response: GameInfo, code: number, message: string, detail: any };
    GetBoard: (r:GameInfo) => { response: GameBoard, code: number, message: string, detail: any };
    ExecuteTurn: (r:TurnInfo) => { response: TurnResult, code: number, message: string, detail: any };
    DeleteGame: (r:GameInfo) => { response: DeleteResult, code: number, message: string, detail: any };
}
